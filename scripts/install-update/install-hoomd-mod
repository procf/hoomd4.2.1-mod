#!/bin/bash
#SBATCH -J instl
#SBATCH -n 1 -N 1
#SBATCH -t 5:00:00
#SBATCH -o %A-instl.out
#SBATCH -e %A-instl.err

# obtain hoomd-blue if you don't already have it
#git clone git@github.com:procf/hoomd4.2.1-mod.git

# move out of the hoomd4.1-mod/scripts/install-update directory
cd ../../../

# create new virtual environment to store hoomd-blue
# (choice of anaconda or miniconda, just be consistent)
module load miniconda3/24.11.1
module load cmake/3.30.2
module load OpenMPI/4.1.6
module load cuda/12.1.1
module load OpenBLAS/0.3.29
python3 -m venv hoomdmod4.2.1-venv
source hoomdmod4.2.1-venv/bin/activate

# install prereqs (pybind11, cereal, Eigen)
yes | python3 hoomd4.2.1-mod/hoomd-4.2.1-procf/install-prereq-headers.py

# compile and install hoomd-blue
# NOTE: make sure GPU features are enabled and platforms are specified 
# NOTE: make sure ENABLE_MPI=on
# NOTE: HPMC, METAL, and TESTING are unused and turned off to speed up install 
cmake -B build/hoomd -S hoomd4.2.1-mod/hoomd-4.2.1-procf \
        -DENABLE_GPU=ON \
        -DHOOMD_GPU_PLATFORM=CUDA \
        -DENABLE_MPI=ON \
        -DBUILD_HPMC=OFF \
        -DBUILD_METAL=OFF \
        -DBUILD_TESTING=OFF \
        -DCMAKE_CUDA_COMPILER=$(which nvcc) \
        -DCMAKE_CUDA_ARCHITECTURES=80 \
        -DPYTHON_EXECUTABLE=$(which python) \
        -DCMAKE_INSTALL_PREFIX=$VIRTUAL_ENV \
        -DCMAKE_PREFIX_PATH=$VIRTUAL_ENV \
        -DOPENBLAS_INCLUDE_DIR=/shared/EL9/explorer/OpenBLAS/0.3.29/include \
        -DOPENBLAS_LIBRARIES=/shared/EL9/explorer/OpenBLAS/0.3.29/lib/libopenblas.so

cmake --build build/hoomd
cmake --install build/hoomd

# install additional required py packages
pip3 install numpy==1.24.4
pip3 install gsd==3.2.1
pip3 install charset_normalizer # to improve fortran ascii handling
pip3 install matplotlib
pip3 install pandas
pip3 install networkx
pip3 install scipy
pip install pyvoro
CC=mpicc pip install --no-binary=mpi4py mpi4py
